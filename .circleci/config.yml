# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # ruby2.5.1を使ったアプリのため
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          #  ①注意！！ bundlerのバージョンが2.0.1以上だと、bundle installに失敗します。ここに環境として指定します。
          - BUNDLER_VERSION: 1.16.3
          #  ②注意！！ circleCIは仮想環境を構築するので、そのときに使うデータベースを指定する必要があります。
          - RAILS_ENV: 'test'
      # Mysqlのバージョン
      - image: circleci/mysql:8.0
        environment:
          - MYSQL_ROOT_PASSWORD: password
          - MYSQL_ROOT_HOST: '%'
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          # ①bundler2.0.1以降のものを使っているのであれば、環境変数と合わせて指定する必要があります。
          command: |
            gem install bundler -v 1.16.3
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # ②ちょっと無理やりですが、database.ymlとdatabase.yml.ciを入れ替える記述です。
      - run: mv config/database.yml.ci config/database.yml

      # Database setup
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load

      # rubocopを走らせる記述です。
      - run:
          name: Rubocop
          command: bundle exec rubocop

      # rspecを走らせる記述です。
      # run tests!
      - run:
          name: run tests
          # ③ここでRspecJunitFormatterというgemをインストールしていないとエラーになります。gemfileに記述しましょう。
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
